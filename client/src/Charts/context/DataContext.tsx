import React from 'react';

import { Period, ChartType, ChartContext } from '../types/commonTypes';

export const contextDefaultValues = {
  pageId: '',
  componentId: 0,
  metricData: {
    metricTypes: [],
    sets: [],
    settings: [],
    defaultSortField: '',
  },
  onlyOneYear: false,
  selectedMetrics: [],
  isTitleEditable: undefined,
  dataLoading: true,
  settingsLoading: true,
  isLoadingAddSet: false,
  isLoadingSaveSet: false,
  chartName: '',
  eventTogglerIsActive: false,
  addEventTogglerIsActive: false,
  hasPeriods: false,
  hasLegend: false,
  hasToolbar: true,
  minPeriod: 'day' as Period,
  periods: [],
  currentPeriod: 'day' as Period,
  chartData: [],
  events: null,
  chartType: 'linear' as ChartType,
  useCustomizer: true,
  useDimensions: undefined,
  useOwnFilter: undefined,
  filterOptions: undefined,
  dimensions: [],
  timePeriods: null,
  isTechAndDevice: false,
  onCompleteTitleEdit: () => {},
  toolbarHandlers: {
    onToggleEvents: () => {},
    onChangePeriod: () => {},
    onChangeMetric: () => {},
    onApplyDimension: () => {},
    onApplyCustomizer: () => {},
    onCreateSet: () => {},
    onUpdateSet: () => {},
    onDeleteSet: () => {},
    onAddEvent: () => {},
    onApplyFilter: () => {},
  },
  onUpdateEvents: () => {},
  actionPopover: () => {},
  setDisabledMetrics: () => {},
  onToggleChart: () => {},
  onToggleEvents: () => {},
  disabledMetrics: {
    lastSetIndex: null,
    lastSetId: null,
    metrics: [],
    componentMetrics: [],
  },
  openedPopover: null,
  color: undefined,
  height: undefined,
  canHide: true,
  chartIsHidden: false,
  showEvents: false,
  updateAttributionModelStatuses: {
    isFetching: false,
    isLoaded: false,
    isFailed: false,
    errorMessage: '',
    errorTitle: '',
    errorType: '',
    errorDetails: null,
  },
};

const DataContext = React.createContext<ChartContext>(contextDefaultValues);
export default DataContext;
